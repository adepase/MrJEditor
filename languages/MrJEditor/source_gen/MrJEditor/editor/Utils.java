package MrJEditor.editor;

/*Generated by MPS */

import java.util.HashMap;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Set;
import java.util.TreeSet;

public class Utils {
  public static HashMap<String, SNode> slotFillingVars(SNode rule) {
    HashMap<String, SNode> references = new HashMap<String, SNode>();

    boolean found = false;

    for (SNode e : ListSequence.fromList(SLinkOperations.getChildren(rule, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5e8308L, "match")))) {
      if (SNodeOperations.isInstanceOf(e, MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e82feL, "MrJEditor.structure.Text"))) {
        String pass = SPropertyOperations.getString((SNodeOperations.cast(e, MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e82feL, "MrJEditor.structure.Text"))), MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e82feL, 0x155a47bdff5e82ffL, "txt"));
        int pos = -1;
        while ((pos = (pass.indexOf("Â°"))) > -1 && !(found)) {
          found = true;
        }
      } else if (SNodeOperations.isInstanceOf(e, MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd041L, "MrJEditor.structure.EntityDeclaration"))) {
        if (found) {
          String name = SPropertyOperations.getString((SNodeOperations.cast(e, MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd041L, "MrJEditor.structure.EntityDeclaration"))), MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd041L, 0x4c10d49d68595eL, "name"));
          references.put(name, (SNodeOperations.cast(e, MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd041L, "MrJEditor.structure.EntityDeclaration"))));
        }
      }
    }

    return references;
  }

  public static String stringFromMatch(List<SNode> match) {
    String result = "";
    for (SNode el : ListSequence.fromList(match)) {
      if (SNodeOperations.isInstanceOf(el, MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff63ea14L, "MrJEditor.structure.EntityAssignment"))) {
        SNode ea = (SNodeOperations.cast(el, MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff63ea14L, "MrJEditor.structure.EntityAssignment")));
        result += "<" + ((!(SPropertyOperations.getString_def(ea, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff63ea14L, 0x4c10d49d515887L, "type"), "S").equals("N")) && (!(SPropertyOperations.getString_def(ea, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff63ea14L, 0x4c10d49d515887L, "type"), "S").equals("S"))) ? SPropertyOperations.getString_def(ea, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff63ea14L, 0x4c10d49d515887L, "type"), "S") : "")) + ((SPropertyOperations.getInteger(ea, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff63ea14L, 0x4c10d49d515889L, "numWord")) > 0 ? "" + SPropertyOperations.getInteger(ea, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff63ea14L, 0x4c10d49d515889L, "numWord")) : "")) + SPropertyOperations.getString(ea, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd041L, 0x4c10d49d68595eL, "name")) + ((SLinkOperations.getChildren(ea, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff63ea14L, 0x4c10d49d51584fL, "format")).size() > 0 ? "{" + stringFromMatch(ListSequence.fromList(SLinkOperations.getChildren(ea, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff63ea14L, 0x4c10d49d51584fL, "format"))).toListSequence()) + "}" : "")) + ((SLinkOperations.getChildren(ea, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff63ea14L, 0x4c10d49d515851L, "exclude")).size() > 0 ? "{" + stringFromMatch(ListSequence.fromList(SLinkOperations.getChildren(ea, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff63ea14L, 0x4c10d49d515851L, "exclude"))).toListSequence()) + "}" : "")) + ">";
      } else if (SNodeOperations.isInstanceOf(el, MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff63e96aL, "MrJEditor.structure.EntityReference"))) {
        result += "$" + SLinkOperations.getTarget((SNodeOperations.cast(el, MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff63e96aL, "MrJEditor.structure.EntityReference"))), MetaAdapterFactory.getReferenceLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x48081dcc6022dc52L, 0x48081dcc602861e2L, "name")) + SPropertyOperations.getString_def((SNodeOperations.cast(el, MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff63e96aL, "MrJEditor.structure.EntityReference"))), MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x48081dcc6022dc52L, 0x48081dcc6022dc53L, "optional"), "-");
      } else if (SNodeOperations.isInstanceOf(el, MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff62c107L, "MrJEditor.structure.EntitySubstitution"))) {
        result += "#" + SLinkOperations.getTarget((SNodeOperations.cast(el, MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff62c107L, "MrJEditor.structure.EntitySubstitution"))), MetaAdapterFactory.getReferenceLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x48081dcc6022dc52L, 0x48081dcc602861e2L, "name")) + SPropertyOperations.getString_def((SNodeOperations.cast(el, MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff62c107L, "MrJEditor.structure.EntitySubstitution"))), MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x48081dcc6022dc52L, 0x48081dcc6022dc53L, "optional"), "-");
      } else if (SNodeOperations.isInstanceOf(el, MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e82feL, "MrJEditor.structure.Text"))) {
        result += SPropertyOperations.getString((SNodeOperations.cast(el, MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e82feL, "MrJEditor.structure.Text"))), MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e82feL, 0x155a47bdff5e82ffL, "txt"));
      }
    }

    return result;
  }

  public static String expandMatch(String match, HashMap<String, String> vars) {
    String beforeVars = "";
    //  Deleted code 
    match = variableSubst(match, vars);
    return match;
  }

  public static String variableSubst(String input, HashMap<String, String> variables) {
    String output = input;
    //  Deleted code 
    return output;
  }

  public static Matcher createTimeoutMatcher(String stringToMatch, String regExp, int timeoutMillis) {
    Pattern pattern = Pattern.compile(regExp);
    return createTimeoutMatcher(stringToMatch, pattern, timeoutMillis);
  }

  public static Matcher createTimeoutMatcher(String stringToMatch, Pattern regExp, int timeoutMillis) {
    CharSequence charSeq = new InterruptibleCharSequence(stringToMatch, timeoutMillis, stringToMatch, regExp.pattern());
    return regExp.matcher(charSeq);
  }

  public static Set<String> getNamedGroupCandidates(String regExp) {
    Set<String> namedGroups = new TreeSet<String>();

    return namedGroups;
  }
}
