package MrJEditor.editor;

/*Generated by MPS */

import jetbrains.mps.editor.runtime.descriptor.AbstractEditorBuilder;
import org.apache.log4j.Logger;
import org.apache.log4j.LogManager;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cellLayout.CellLayout_Indent;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.openapi.editor.style.Style;
import jetbrains.mps.editor.runtime.style.StyleImpl;
import jetbrains.mps.editor.runtime.style.StyleAttributes;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.nodeEditor.cellLayout.CellLayout_Vertical;
import jetbrains.mps.nodeEditor.cellProviders.AbstractCellListHandler;
import jetbrains.mps.openapi.editor.style.StyleRegistry;
import jetbrains.mps.nodeEditor.MPSColors;
import jetbrains.mps.lang.editor.cellProviders.RefNodeListHandler;
import jetbrains.mps.smodel.action.NodeFactoryManager;
import jetbrains.mps.openapi.editor.menus.transformation.SNodeLocation;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.nodeEditor.cellActions.CellAction_DeleteNode;
import jetbrains.mps.openapi.editor.cells.DefaultSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.SChildSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.CompositeSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.BasicCellContext;
import jetbrains.mps.nodeEditor.cellMenu.SubstituteInfoPartExt;
import jetbrains.mps.nodeEditor.cellMenu.SChildSubstituteInfoPartEx;
import jetbrains.mps.lang.editor.generator.internal.AbstractCellMenuPart_Generic_Item;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import java.awt.Color;
import java.util.ArrayList;
import java.util.HashMap;
import MrJEditor.behavior.Script__BehaviorDescriptor;
import java.util.Iterator;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import jetbrains.mps.baseLanguage.logging.runtime.model.LoggingRuntime;
import org.apache.log4j.Level;
import java.util.regex.Matcher;
import java.util.regex.PatternSyntaxException;
import java.util.Set;

/*package*/ class Rule_EditorBuilder_a extends AbstractEditorBuilder {
  private static final Logger LOG = LogManager.getLogger(Rule_EditorBuilder_a.class);
  @NotNull
  private SNode myNode;

  public Rule_EditorBuilder_a(@NotNull EditorContext context, @NotNull SNode node) {
    super(context);
    myNode = node;
  }

  @NotNull
  @Override
  public SNode getNode() {
    return myNode;
  }

  /*package*/ EditorCell createCell() {
    return createCollection_z0m96w_a();
  }

  private EditorCell createCollection_z0m96w_a() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_z0m96w_a");
    editorCell.setBig(true);
    editorCell.setCellContext(getCellFactory().getCellContext());
    if (nodeCondition_z0m96w_a0a()) {
      editorCell.addEditorCell(createCollection_z0m96w_a0());
    }
    if (nodeCondition_z0m96w_a1a()) {
      editorCell.addEditorCell(createCollection_z0m96w_b0());
    }
    if (nodeCondition_z0m96w_a2a()) {
      editorCell.addEditorCell(createCollection_z0m96w_c0());
    }
    if (nodeCondition_z0m96w_a3a()) {
      editorCell.addEditorCell(createCollection_z0m96w_d0());
    }
    if (nodeCondition_z0m96w_a4a()) {
      editorCell.addEditorCell(createCollection_z0m96w_e0());
    }
    return editorCell;
  }
  private boolean nodeCondition_z0m96w_a0a() {
    return (SNodeOperations.isInstanceOf(SNodeOperations.getParent(myNode), MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07bL, "MrJEditor.structure.Script"))) && SPropertyOperations.getBoolean((SNodeOperations.cast(SNodeOperations.getParent(myNode), MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07bL, "MrJEditor.structure.Script"))), MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07bL, 0x294dd5aa2d38798fL, "showRuleNumber"));
  }
  private boolean nodeCondition_z0m96w_a1a() {
    return ListSequence.fromList(SLinkOperations.getChildren(myNode, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5e2385L, "tests"))).isNotEmpty();
  }
  private boolean nodeCondition_z0m96w_a2a() {
    return SPropertyOperations.getString_def((SNodeOperations.cast(SNodeOperations.getContainingRoot(myNode), MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07bL, "MrJEditor.structure.Script"))), MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07bL, 0x48081dcc603803c3L, "format"), "extended").equals("extended");
  }
  private boolean nodeCondition_z0m96w_a3a() {
    return SPropertyOperations.getString_def((SNodeOperations.cast(SNodeOperations.getContainingRoot(myNode), MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07bL, "MrJEditor.structure.Script"))), MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07bL, 0x48081dcc603803c3L, "format"), "extended").equals("classical");
  }
  private boolean nodeCondition_z0m96w_a4a() {
    return ListSequence.fromList(SLinkOperations.getChildren(myNode, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff61d3dcL, "subRules"))).isNotEmpty();
  }
  private EditorCell createCollection_z0m96w_a0() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_z0m96w_a0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(createConstant_z0m96w_a0a());
    if (nodeCondition_z0m96w_a1a0()) {
      editorCell.addEditorCell(createProperty_z0m96w_b0a());
    }
    if (nodeCondition_z0m96w_a2a0()) {
      editorCell.addEditorCell(createConstant_z0m96w_c0a());
    }
    return editorCell;
  }
  private boolean nodeCondition_z0m96w_a1a0() {
    return (SNodeOperations.isInstanceOf(SNodeOperations.getParent(myNode), MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07bL, "MrJEditor.structure.Script")));
  }
  private boolean nodeCondition_z0m96w_a2a0() {
    return (SNodeOperations.isInstanceOf(SNodeOperations.getParent(myNode), MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07bL, "MrJEditor.structure.Script")));
  }
  private EditorCell createConstant_z0m96w_a0a() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "[Rule n = ");
    editorCell.setCellId("Constant_z0m96w_a0a");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createProperty_z0m96w_b0a() {
    CellProviderWithRole provider = new PropertyCellProvider(myNode, getEditorContext());
    provider.setRole("ruleNumber");
    provider.setNoTargetText("<no ruleNumber>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(getEditorContext());
    editorCell.setCellId("property_ruleNumber");
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(getEditorContext());
      return manager.createNodeRoleAttributeCell(attributeConcept, provider.getRoleAttributeKind(), editorCell);
    } else
    return editorCell;
  }
  private EditorCell createConstant_z0m96w_c0a() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "]");
    editorCell.setCellId("Constant_z0m96w_c0a");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_z0m96w_b0() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Vertical());
    editorCell.setCellId("Collection_z0m96w_b0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(createRefNodeList_z0m96w_a1a());
    return editorCell;
  }
  private EditorCell createRefNodeList_z0m96w_a1a() {
    AbstractCellListHandler handler = new Rule_EditorBuilder_a.testsListHandler_z0m96w_a1a(myNode, "tests", getEditorContext());
    EditorCell_Collection editorCell = handler.createCells(new CellLayout_Indent(), false);
    editorCell.setCellId("refNodeList_tests");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_CHILDREN_NEWLINE, true);
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.DARK_GREEN));
    editorCell.getStyle().putAll(style);
    editorCell.setRole(handler.getElementRole());
    return editorCell;
  }
  private static class testsListHandler_z0m96w_a1a extends RefNodeListHandler {
    @NotNull
    private SNode myNode;

    public testsListHandler_z0m96w_a1a(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    public SNode createNodeToInsert(EditorContext editorContext) {
      return NodeFactoryManager.createNode(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e0215L, "MrJEditor.structure.RuleTest"), null, getNode(), getNode().getModel());
    }
    public EditorCell createNodeCell(SNode elementNode) {
      EditorCell elementCell = getUpdateSession().updateChildNodeCell(elementNode);
      installElementCellActions(elementNode, elementCell);
      return elementCell;
    }
    public EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(testsListHandler_z0m96w_a1a.this.getNode(), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5e2385L, "tests")));
      try {
        EditorCell emptyCell = null;
        emptyCell = createConstant_z0m96w_a0b0();
        installElementCellActions(null, emptyCell);
        setCellContext(emptyCell);
        return emptyCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    public void installElementCellActions(SNode elementNode, EditorCell elementCell) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        if (elementNode != null) {
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.FORWARD));
          elementCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.BACKWARD));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
          elementCell.setSubstituteInfo(new SChildSubstituteInfo(elementCell, getNode(), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5e2385L, "tests"), elementNode));
        }
      }
    }
    private EditorCell createConstant_z0m96w_a0b0() {
      EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "<no test>");
      editorCell.setCellId("Constant_z0m96w_a0b0");
      Style style = new StyleImpl();
      style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.DARK_GREEN));
      editorCell.getStyle().putAll(style);
      editorCell.setDefaultText("");
      return editorCell;
    }
  }
  private EditorCell createCollection_z0m96w_c0() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_z0m96w_c0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, false);
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.setFoldable(nodeCondition_z0m96w_a2a_0());
    editorCell.setFoldedCell(createConstant_z0m96w_a2a());
    if (nodeCondition_z0m96w_a0c0()) {
      editorCell.addEditorCell(createCollection_z0m96w_a2a());
    }
    editorCell.addEditorCell(createCollection_z0m96w_b2a());
    editorCell.addEditorCell(createCollection_z0m96w_c2a());
    editorCell.addEditorCell(createCollection_z0m96w_d2a());
    editorCell.addEditorCell(createConstant_z0m96w_e2a());
    editorCell.addEditorCell(createCollection_z0m96w_f2a());
    editorCell.addEditorCell(createCollection_z0m96w_g2a());
    return editorCell;
  }
  private boolean nodeCondition_z0m96w_a0c0() {
    return ListSequence.fromList(SLinkOperations.getChildren(myNode, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0xd75d12e3a35bc76L, "comments"))).isNotEmpty();
  }
  private boolean nodeCondition_z0m96w_a2a_0() {
    return ListSequence.fromList(SLinkOperations.getChildren(myNode, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5e2385L, "tests"))).isNotEmpty();
  }
  private EditorCell createCollection_z0m96w_a2a() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Vertical());
    editorCell.setCellId("Collection_z0m96w_a2a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(createRefNodeList_z0m96w_a0c0());
    return editorCell;
  }
  private EditorCell createRefNodeList_z0m96w_a0c0() {
    AbstractCellListHandler handler = new Rule_EditorBuilder_a.commentsListHandler_z0m96w_a0c0(myNode, "comments", getEditorContext());
    EditorCell_Collection editorCell = handler.createCells(new CellLayout_Vertical(), false);
    editorCell.setCellId("refNodeList_comments");
    Style style = new StyleImpl();
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.DARK_GREEN));
    editorCell.getStyle().putAll(style);
    editorCell.setRole(handler.getElementRole());
    return editorCell;
  }
  private static class commentsListHandler_z0m96w_a0c0 extends RefNodeListHandler {
    @NotNull
    private SNode myNode;

    public commentsListHandler_z0m96w_a0c0(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    public SNode createNodeToInsert(EditorContext editorContext) {
      return NodeFactoryManager.createNode(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff61bafeL, "MrJEditor.structure.Comment"), null, getNode(), getNode().getModel());
    }
    public EditorCell createNodeCell(SNode elementNode) {
      EditorCell elementCell = getUpdateSession().updateChildNodeCell(elementNode);
      installElementCellActions(elementNode, elementCell);
      return elementCell;
    }
    public EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(commentsListHandler_z0m96w_a0c0.this.getNode(), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0xd75d12e3a35bc76L, "comments")));
      try {
        EditorCell emptyCell = null;
        emptyCell = createConstant_z0m96w_a0a2a();
        installElementCellActions(null, emptyCell);
        setCellContext(emptyCell);
        return emptyCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    public void installElementCellActions(SNode elementNode, EditorCell elementCell) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        if (elementNode != null) {
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.FORWARD));
          elementCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.BACKWARD));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
          elementCell.setSubstituteInfo(new SChildSubstituteInfo(elementCell, getNode(), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0xd75d12e3a35bc76L, "comments"), elementNode));
        }
      }
    }
    private EditorCell createConstant_z0m96w_a0a2a() {
      EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "//");
      editorCell.setCellId("Constant_z0m96w_a0a2a");
      Style style = new StyleImpl();
      style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.DARK_GREEN));
      editorCell.getStyle().putAll(style);
      editorCell.setDefaultText("");
      return editorCell;
    }
  }
  private EditorCell createCollection_z0m96w_b2a() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_z0m96w_b2a");
    editorCell.addEditorCell(createConstant_z0m96w_a1c0());
    return editorCell;
  }
  private EditorCell createConstant_z0m96w_a1c0() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "Add");
    editorCell.setCellId("Constant_z0m96w_a1c0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.blue));
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    editorCell.setSubstituteInfo(new CompositeSubstituteInfo(getEditorContext(), new BasicCellContext(myNode), new SubstituteInfoPartExt[]{new Rule_EditorBuilder_a.Rule_generic_cellMenu_z0m96w_a0a1c0(), new Rule_EditorBuilder_a.Rule_generic_cellMenu_z0m96w_b0a1c0(), new Rule_EditorBuilder_a.Rule_generic_cellMenu_z0m96w_c0a1c0(), new Rule_EditorBuilder_a.Rule_generic_cellMenu_z0m96w_d0a1c0(), new SChildSubstituteInfoPartEx(editorCell)}));
    return editorCell;
  }
  public static class Rule_generic_cellMenu_z0m96w_a0a1c0 extends AbstractCellMenuPart_Generic_Item {
    public Rule_generic_cellMenu_z0m96w_a0a1c0() {
    }
    public void handleAction(SNode node, SModel model, IOperationContext operationContext, EditorContext editorContext) {
      SNodeFactoryOperations.addNewChild(node, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5e2385L, "tests"), SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e0215L, "MrJEditor.structure.RuleTest")));
    }
    public String getMatchingText() {
      return "Test";
    }
  }
  public static class Rule_generic_cellMenu_z0m96w_b0a1c0 extends AbstractCellMenuPart_Generic_Item {
    public Rule_generic_cellMenu_z0m96w_b0a1c0() {
    }
    public void handleAction(SNode node, SModel model, IOperationContext operationContext, EditorContext editorContext) {
      SNodeFactoryOperations.addNewChild(node, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0xd75d12e3a35bc76L, "comments"), SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff61bafeL, "MrJEditor.structure.Comment")));
    }
    public String getMatchingText() {
      return "Comment";
    }
  }
  public static class Rule_generic_cellMenu_z0m96w_c0a1c0 extends AbstractCellMenuPart_Generic_Item {
    public Rule_generic_cellMenu_z0m96w_c0a1c0() {
    }
    public void handleAction(SNode node, SModel model, IOperationContext operationContext, EditorContext editorContext) {
      SNodeFactoryOperations.addNewChild(node, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff61d3dcL, "subRules"), SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, "MrJEditor.structure.Rule")));
    }
    public String getMatchingText() {
      return "SubRule";
    }
  }
  public static class Rule_generic_cellMenu_z0m96w_d0a1c0 extends AbstractCellMenuPart_Generic_Item {
    public Rule_generic_cellMenu_z0m96w_d0a1c0() {
    }
    public void handleAction(SNode node, SModel model, IOperationContext operationContext, EditorContext editorContext) {
      if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, "MrJEditor.structure.Rule"))) {
        SNodeFactoryOperations.addNewChild((SNodeOperations.cast(SNodeOperations.getParent(node), MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, "MrJEditor.structure.Rule"))), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff61d3dcL, "subRules"), SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, "MrJEditor.structure.Rule")));
      }
    }
    public String getMatchingText() {
      return "New Sibling";
    }
  }
  private EditorCell createCollection_z0m96w_c2a() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_z0m96w_c2a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    if (nodeCondition_z0m96w_a0c2a()) {
      editorCell.addEditorCell(createProperty_z0m96w_a2c0());
    }
    return editorCell;
  }
  private boolean nodeCondition_z0m96w_a0c2a() {
    return SPropertyOperations.getInteger(myNode, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5cd07fL, "level")) > 0;
  }
  private EditorCell createProperty_z0m96w_a2c0() {
    CellProviderWithRole provider = new PropertyCellProvider(myNode, getEditorContext());
    provider.setRole("level");
    provider.setNoTargetText("");
    provider.setAllowsEmptyTarget(true);
    EditorCell editorCell;
    editorCell = provider.createEditorCell(getEditorContext());
    editorCell.setCellId("property_level");
    Style style = new StyleImpl();
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.gray));
    editorCell.getStyle().putAll(style);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(getEditorContext());
      return manager.createNodeRoleAttributeCell(attributeConcept, provider.getRoleAttributeKind(), editorCell);
    } else
    return editorCell;
  }
  private EditorCell createCollection_z0m96w_d2a() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_z0m96w_d2a");
    editorCell.setFoldable(true);
    editorCell.addEditorCell(createConstant_z0m96w_a3c0());
    editorCell.addEditorCell(createCollection_z0m96w_b3c0());
    editorCell.setInitiallyCollapsed(true);
    return editorCell;
  }
  private EditorCell createConstant_z0m96w_a3c0() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "Precond : ");
    editorCell.setCellId("Constant_z0m96w_a3c0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.magenta));
    style.set(StyleAttributes.PUNCTUATION_LEFT, true);
    style.set(StyleAttributes.PUNCTUATION_RIGHT, true);
    style.set(StyleAttributes.INDENT_LAYOUT_ON_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_z0m96w_b3c0() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_z0m96w_b3c0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.setFoldable(true);
    editorCell.setFoldedCell(createConstant_z0m96w_a1d2a());
    editorCell.addEditorCell(createRefNodeList_z0m96w_a1d2a());
    editorCell.setInitiallyCollapsed(nodeCondition_z0m96w_a1d2a());
    return editorCell;
  }
  private boolean nodeCondition_z0m96w_a1d2a() {
    return ListSequence.fromList(SLinkOperations.getChildren(myNode, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5e8308L, "match"))).isNotEmpty();
  }
  private EditorCell createRefNodeList_z0m96w_a1d2a() {
    AbstractCellListHandler handler = new Rule_EditorBuilder_a.precondListHandler_z0m96w_a1d2a(myNode, "precond", getEditorContext());
    EditorCell_Collection editorCell = handler.createCells(new CellLayout_Indent(), false);
    editorCell.setCellId("refNodeList_precond");
    Style style = new StyleImpl();
    style.set(StyleAttributes.PUNCTUATION_LEFT, true);
    style.set(StyleAttributes.PUNCTUATION_RIGHT, true);
    editorCell.getStyle().putAll(style);
    editorCell.setRole(handler.getElementRole());
    return editorCell;
  }
  private static class precondListHandler_z0m96w_a1d2a extends RefNodeListHandler {
    @NotNull
    private SNode myNode;

    public precondListHandler_z0m96w_a1d2a(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    public SNode createNodeToInsert(EditorContext editorContext) {
      return nodeFactory();
    }
    public SNode nodeFactory() {
      return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e82feL, "MrJEditor.structure.Text"));
    }
    public EditorCell createNodeCell(SNode elementNode) {
      EditorCell elementCell = getUpdateSession().updateChildNodeCell(elementNode);
      installElementCellActions(elementNode, elementCell);
      return elementCell;
    }
    public EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(precondListHandler_z0m96w_a1d2a.this.getNode(), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff64934fL, "precond")));
      try {
        EditorCell emptyCell = null;
        emptyCell = createConstant_z0m96w_a0b3c0();
        installElementCellActions(null, emptyCell);
        setCellContext(emptyCell);
        return emptyCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    public void installElementCellActions(SNode elementNode, EditorCell elementCell) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        if (elementNode != null) {
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.FORWARD));
          elementCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.BACKWARD));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
          elementCell.setSubstituteInfo(new SChildSubstituteInfo(elementCell, getNode(), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff64934fL, "precond"), elementNode));
        }
      }
    }
    private EditorCell createConstant_z0m96w_a0b3c0() {
      EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "<NO PreCond>");
      editorCell.setCellId("Constant_z0m96w_a0b3c0");
      Style style = new StyleImpl();
      style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.magenta));
      editorCell.getStyle().putAll(style);
      editorCell.setDefaultText("");
      return editorCell;
    }
  }
  private EditorCell createConstant_z0m96w_a1d2a() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "Precond [...]");
    editorCell.setCellId("Constant_z0m96w_a1d2a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.magenta));
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_z0m96w_e2a() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "Match   : ");
    editorCell.setCellId("Constant_z0m96w_e2a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.black));
    style.set(StyleAttributes.PUNCTUATION_LEFT, true);
    style.set(StyleAttributes.PUNCTUATION_RIGHT, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_z0m96w_f2a() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_z0m96w_f2a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(createRefNodeList_z0m96w_a5c0());
    return editorCell;
  }
  private EditorCell createRefNodeList_z0m96w_a5c0() {
    AbstractCellListHandler handler = new Rule_EditorBuilder_a.matchListHandler_z0m96w_a5c0(myNode, "match", getEditorContext());
    EditorCell_Collection editorCell = handler.createCells(new CellLayout_Indent(), false);
    editorCell.setCellId("refNodeList_match");
    Style style = new StyleImpl();
    style.set(StyleAttributes.BACKGROUND_COLOR, StyleRegistry.getInstance().getSimpleColor(new Color(14540253)));
    editorCell.getStyle().putAll(style);
    editorCell.setRole(handler.getElementRole());
    return editorCell;
  }
  private static class matchListHandler_z0m96w_a5c0 extends RefNodeListHandler {
    @NotNull
    private SNode myNode;

    public matchListHandler_z0m96w_a5c0(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    public SNode createNodeToInsert(EditorContext editorContext) {
      return nodeFactory();
    }
    public SNode nodeFactory() {
      return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e82feL, "MrJEditor.structure.Text"));
    }
    public EditorCell createNodeCell(SNode elementNode) {
      EditorCell elementCell = getUpdateSession().updateChildNodeCell(elementNode);
      installElementCellActions(elementNode, elementCell);
      return elementCell;
    }
    public EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(matchListHandler_z0m96w_a5c0.this.getNode(), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5e8308L, "match")));
      try {
        EditorCell emptyCell = null;
        emptyCell = createConstant_z0m96w_a0f2a();
        installElementCellActions(null, emptyCell);
        setCellContext(emptyCell);
        return emptyCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    public void installElementCellActions(SNode elementNode, EditorCell elementCell) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        if (elementNode != null) {
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.FORWARD));
          elementCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.BACKWARD));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
          elementCell.setSubstituteInfo(new SChildSubstituteInfo(elementCell, getNode(), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5e8308L, "match"), elementNode));
        }
      }
    }
    private EditorCell createConstant_z0m96w_a0f2a() {
      EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "<NO Match>");
      editorCell.setCellId("Constant_z0m96w_a0f2a");
      Style style = new StyleImpl();
      style.set(StyleAttributes.BACKGROUND_COLOR, StyleRegistry.getInstance().getSimpleColor(new Color(14540253)));
      editorCell.getStyle().putAll(style);
      editorCell.setDefaultText("");
      return editorCell;
    }
  }
  private EditorCell createCollection_z0m96w_g2a() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_z0m96w_g2a");
    editorCell.setFoldable(true);
    editorCell.addEditorCell(createConstant_z0m96w_a6c0());
    editorCell.addEditorCell(createCollection_z0m96w_b6c0());
    editorCell.addEditorCell(createConstant_z0m96w_c6c0());
    editorCell.addEditorCell(createCollection_z0m96w_d6c0());
    editorCell.addEditorCell(createConstant_z0m96w_e6c0());
    editorCell.addEditorCell(createCollection_z0m96w_f6c0());
    editorCell.addEditorCell(createConstant_z0m96w_g6c0());
    editorCell.addEditorCell(createCollection_z0m96w_h6c0());
    return editorCell;
  }
  private EditorCell createConstant_z0m96w_a6c0() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "PreEval : ");
    editorCell.setCellId("Constant_z0m96w_a6c0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.magenta));
    style.set(StyleAttributes.PUNCTUATION_LEFT, true);
    style.set(StyleAttributes.PUNCTUATION_RIGHT, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_z0m96w_b6c0() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_z0m96w_b6c0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.setFoldable(true);
    editorCell.addEditorCell(createRefNodeList_z0m96w_a1g2a());
    return editorCell;
  }
  private EditorCell createRefNodeList_z0m96w_a1g2a() {
    AbstractCellListHandler handler = new Rule_EditorBuilder_a.preEvalListHandler_z0m96w_a1g2a(myNode, "preEval", getEditorContext());
    EditorCell_Collection editorCell = handler.createCells(new CellLayout_Indent(), false);
    editorCell.setCellId("refNodeList_preEval");
    editorCell.setRole(handler.getElementRole());
    return editorCell;
  }
  private static class preEvalListHandler_z0m96w_a1g2a extends RefNodeListHandler {
    @NotNull
    private SNode myNode;

    public preEvalListHandler_z0m96w_a1g2a(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    public SNode createNodeToInsert(EditorContext editorContext) {
      return nodeFactory();
    }
    public SNode nodeFactory() {
      return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e82feL, "MrJEditor.structure.Text"));
    }
    public EditorCell createNodeCell(SNode elementNode) {
      EditorCell elementCell = getUpdateSession().updateChildNodeCell(elementNode);
      installElementCellActions(elementNode, elementCell);
      return elementCell;
    }
    public EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(preEvalListHandler_z0m96w_a1g2a.this.getNode(), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef836L, "preEval")));
      try {
        EditorCell emptyCell = null;
        emptyCell = createConstant_z0m96w_a0b6c0();
        installElementCellActions(null, emptyCell);
        setCellContext(emptyCell);
        return emptyCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    public void installElementCellActions(SNode elementNode, EditorCell elementCell) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        if (elementNode != null) {
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.FORWARD));
          elementCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.BACKWARD));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
          elementCell.setSubstituteInfo(new SChildSubstituteInfo(elementCell, getNode(), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef836L, "preEval"), elementNode));
        }
      }
    }
    private EditorCell createConstant_z0m96w_a0b6c0() {
      EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "<NO PreEval>");
      editorCell.setCellId("Constant_z0m96w_a0b6c0");
      Style style = new StyleImpl();
      style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.magenta));
      editorCell.getStyle().putAll(style);
      editorCell.setDefaultText("");
      return editorCell;
    }
  }
  private EditorCell createConstant_z0m96w_c6c0() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "Response: ");
    editorCell.setCellId("Constant_z0m96w_c6c0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.black));
    style.set(StyleAttributes.PUNCTUATION_LEFT, true);
    style.set(StyleAttributes.PUNCTUATION_RIGHT, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_z0m96w_d6c0() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_z0m96w_d6c0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.setFoldable(true);
    editorCell.addEditorCell(createRefNodeList_z0m96w_a3g2a());
    return editorCell;
  }
  private EditorCell createRefNodeList_z0m96w_a3g2a() {
    AbstractCellListHandler handler = new Rule_EditorBuilder_a.responseListHandler_z0m96w_a3g2a(myNode, "response", getEditorContext());
    EditorCell_Collection editorCell = handler.createCells(new CellLayout_Indent(), false);
    editorCell.setCellId("refNodeList_response");
    Style style = new StyleImpl();
    style.set(StyleAttributes.BACKGROUND_COLOR, StyleRegistry.getInstance().getSimpleColor(new Color(14540253)));
    editorCell.getStyle().putAll(style);
    editorCell.setRole(handler.getElementRole());
    return editorCell;
  }
  private static class responseListHandler_z0m96w_a3g2a extends RefNodeListHandler {
    @NotNull
    private SNode myNode;

    public responseListHandler_z0m96w_a3g2a(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    public SNode createNodeToInsert(EditorContext editorContext) {
      return nodeFactory();
    }
    public SNode nodeFactory() {
      return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e82feL, "MrJEditor.structure.Text"));
    }
    public EditorCell createNodeCell(SNode elementNode) {
      EditorCell elementCell = getUpdateSession().updateChildNodeCell(elementNode);
      installElementCellActions(elementNode, elementCell);
      return elementCell;
    }
    public EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(responseListHandler_z0m96w_a3g2a.this.getNode(), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef83cL, "response")));
      try {
        EditorCell emptyCell = null;
        emptyCell = createConstant_z0m96w_a0d6c0();
        installElementCellActions(null, emptyCell);
        setCellContext(emptyCell);
        return emptyCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    public void installElementCellActions(SNode elementNode, EditorCell elementCell) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        if (elementNode != null) {
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.FORWARD));
          elementCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.BACKWARD));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
          elementCell.setSubstituteInfo(new SChildSubstituteInfo(elementCell, getNode(), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef83cL, "response"), elementNode));
        }
      }
    }
    private EditorCell createConstant_z0m96w_a0d6c0() {
      EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "<NO Response>");
      editorCell.setCellId("Constant_z0m96w_a0d6c0");
      Style style = new StyleImpl();
      style.set(StyleAttributes.BACKGROUND_COLOR, StyleRegistry.getInstance().getSimpleColor(new Color(14540253)));
      editorCell.getStyle().putAll(style);
      editorCell.setDefaultText("");
      return editorCell;
    }
  }
  private EditorCell createConstant_z0m96w_e6c0() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "PostEval: ");
    editorCell.setCellId("Constant_z0m96w_e6c0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.magenta));
    style.set(StyleAttributes.PUNCTUATION_LEFT, true);
    style.set(StyleAttributes.PUNCTUATION_RIGHT, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_z0m96w_f6c0() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_z0m96w_f6c0");
    editorCell.setFoldable(true);
    editorCell.addEditorCell(createRefNodeList_z0m96w_a5g2a());
    return editorCell;
  }
  private EditorCell createRefNodeList_z0m96w_a5g2a() {
    AbstractCellListHandler handler = new Rule_EditorBuilder_a.postEvalListHandler_z0m96w_a5g2a(myNode, "postEval", getEditorContext());
    EditorCell_Collection editorCell = handler.createCells(new CellLayout_Indent(), false);
    editorCell.setCellId("refNodeList_postEval");
    editorCell.setRole(handler.getElementRole());
    return editorCell;
  }
  private static class postEvalListHandler_z0m96w_a5g2a extends RefNodeListHandler {
    @NotNull
    private SNode myNode;

    public postEvalListHandler_z0m96w_a5g2a(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    public SNode createNodeToInsert(EditorContext editorContext) {
      return nodeFactory();
    }
    public SNode nodeFactory() {
      return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e82feL, "MrJEditor.structure.Text"));
    }
    public EditorCell createNodeCell(SNode elementNode) {
      EditorCell elementCell = getUpdateSession().updateChildNodeCell(elementNode);
      installElementCellActions(elementNode, elementCell);
      return elementCell;
    }
    public EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(postEvalListHandler_z0m96w_a5g2a.this.getNode(), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef843L, "postEval")));
      try {
        EditorCell emptyCell = null;
        emptyCell = createConstant_z0m96w_a0f6c0();
        installElementCellActions(null, emptyCell);
        setCellContext(emptyCell);
        return emptyCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    public void installElementCellActions(SNode elementNode, EditorCell elementCell) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        if (elementNode != null) {
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.FORWARD));
          elementCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.BACKWARD));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
          elementCell.setSubstituteInfo(new SChildSubstituteInfo(elementCell, getNode(), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef843L, "postEval"), elementNode));
        }
      }
    }
    private EditorCell createConstant_z0m96w_a0f6c0() {
      EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "<NO PostEval>");
      editorCell.setCellId("Constant_z0m96w_a0f6c0");
      Style style = new StyleImpl();
      style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.magenta));
      editorCell.getStyle().putAll(style);
      editorCell.setDefaultText("");
      return editorCell;
    }
  }
  private EditorCell createConstant_z0m96w_g6c0() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, ";");
    editorCell.setCellId("Constant_z0m96w_g6c0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_z0m96w_h6c0() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_z0m96w_h6c0");
    editorCell.addEditorCell(createConstant_z0m96w_a7g2a());
    editorCell.addEditorCell(createCollection_z0m96w_b7g2a());
    return editorCell;
  }
  private EditorCell createConstant_z0m96w_a7g2a() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "BotImg  : ");
    editorCell.setCellId("Constant_z0m96w_a7g2a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.orange));
    style.set(StyleAttributes.PUNCTUATION_LEFT, true);
    style.set(StyleAttributes.PUNCTUATION_RIGHT, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_z0m96w_b7g2a() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_z0m96w_b7g2a");
    editorCell.setFoldable(true);
    editorCell.addEditorCell(createProperty_z0m96w_a1h6c0());
    return editorCell;
  }
  private EditorCell createProperty_z0m96w_a1h6c0() {
    CellProviderWithRole provider = new PropertyCellProvider(myNode, getEditorContext());
    provider.setRole("botImg");
    provider.setNoTargetText("<no botImg>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(getEditorContext());
    editorCell.setCellId("property_botImg");
    Style style = new StyleImpl();
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.orange));
    editorCell.getStyle().putAll(style);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(getEditorContext());
      return manager.createNodeRoleAttributeCell(attributeConcept, provider.getRoleAttributeKind(), editorCell);
    } else
    return editorCell;
  }
  private EditorCell createConstant_z0m96w_a2a() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "[Rule...]");
    editorCell.setCellId("Constant_z0m96w_a2a");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_z0m96w_d0() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_z0m96w_d0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, false);
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.setFoldable(nodeCondition_z0m96w_a3a_0());
    editorCell.setFoldedCell(createConstant_z0m96w_a3a());
    if (nodeCondition_z0m96w_a0d0()) {
      editorCell.addEditorCell(createCollection_z0m96w_a3a());
    }
    editorCell.addEditorCell(createCollection_z0m96w_b3a());
    editorCell.addEditorCell(createCollection_z0m96w_c3a());
    editorCell.addEditorCell(createConstant_z0m96w_d3a());
    editorCell.addEditorCell(createCollection_z0m96w_e3a());
    editorCell.addEditorCell(createConstant_z0m96w_f3a());
    editorCell.addEditorCell(createCollection_z0m96w_g3a());
    editorCell.addEditorCell(createConstant_z0m96w_h3a());
    editorCell.addEditorCell(createCollection_z0m96w_i3a());
    return editorCell;
  }
  private boolean nodeCondition_z0m96w_a0d0() {
    return ListSequence.fromList(SLinkOperations.getChildren(myNode, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0xd75d12e3a35bc76L, "comments"))).isNotEmpty();
  }
  private boolean nodeCondition_z0m96w_a3a_0() {
    return ListSequence.fromList(SLinkOperations.getChildren(myNode, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5e2385L, "tests"))).isNotEmpty();
  }
  private EditorCell createCollection_z0m96w_a3a() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Vertical());
    editorCell.setCellId("Collection_z0m96w_a3a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(createRefNodeList_z0m96w_a0d0());
    return editorCell;
  }
  private EditorCell createRefNodeList_z0m96w_a0d0() {
    AbstractCellListHandler handler = new Rule_EditorBuilder_a.commentsListHandler_z0m96w_a0d0(myNode, "comments", getEditorContext());
    EditorCell_Collection editorCell = handler.createCells(new CellLayout_Vertical(), false);
    editorCell.setCellId("refNodeList_comments_1");
    Style style = new StyleImpl();
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.DARK_GREEN));
    editorCell.getStyle().putAll(style);
    editorCell.setRole(handler.getElementRole());
    return editorCell;
  }
  private static class commentsListHandler_z0m96w_a0d0 extends RefNodeListHandler {
    @NotNull
    private SNode myNode;

    public commentsListHandler_z0m96w_a0d0(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    public SNode createNodeToInsert(EditorContext editorContext) {
      return NodeFactoryManager.createNode(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff61bafeL, "MrJEditor.structure.Comment"), null, getNode(), getNode().getModel());
    }
    public EditorCell createNodeCell(SNode elementNode) {
      EditorCell elementCell = getUpdateSession().updateChildNodeCell(elementNode);
      installElementCellActions(elementNode, elementCell);
      return elementCell;
    }
    public EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(commentsListHandler_z0m96w_a0d0.this.getNode(), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0xd75d12e3a35bc76L, "comments")));
      try {
        EditorCell emptyCell = null;
        emptyCell = createConstant_z0m96w_a0a3a();
        installElementCellActions(null, emptyCell);
        setCellContext(emptyCell);
        return emptyCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    public void installElementCellActions(SNode elementNode, EditorCell elementCell) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        if (elementNode != null) {
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.FORWARD));
          elementCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.BACKWARD));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
          elementCell.setSubstituteInfo(new SChildSubstituteInfo(elementCell, getNode(), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0xd75d12e3a35bc76L, "comments"), elementNode));
        }
      }
    }
    private EditorCell createConstant_z0m96w_a0a3a() {
      EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "//");
      editorCell.setCellId("Constant_z0m96w_a0a3a");
      Style style = new StyleImpl();
      style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.DARK_GREEN));
      editorCell.getStyle().putAll(style);
      editorCell.setDefaultText("");
      return editorCell;
    }
  }
  private EditorCell createCollection_z0m96w_b3a() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_z0m96w_b3a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_ON_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(createConstant_z0m96w_a1d0());
    return editorCell;
  }
  private EditorCell createConstant_z0m96w_a1d0() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "Add");
    editorCell.setCellId("Constant_z0m96w_a1d0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.blue));
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    editorCell.setSubstituteInfo(new CompositeSubstituteInfo(getEditorContext(), new BasicCellContext(myNode), new SubstituteInfoPartExt[]{new Rule_EditorBuilder_a.Rule_generic_cellMenu_z0m96w_a0a1d0(), new Rule_EditorBuilder_a.Rule_generic_cellMenu_z0m96w_b0a1d0(), new Rule_EditorBuilder_a.Rule_generic_cellMenu_z0m96w_c0a1d0(), new Rule_EditorBuilder_a.Rule_generic_cellMenu_z0m96w_d0a1d0(), new Rule_EditorBuilder_a.Rule_generic_cellMenu_z0m96w_e0a1d0(), new Rule_EditorBuilder_a.Rule_generic_cellMenu_z0m96w_f0a1d0(), new Rule_EditorBuilder_a.Rule_generic_cellMenu_z0m96w_g0a1d0(), new SChildSubstituteInfoPartEx(editorCell)}));
    return editorCell;
  }
  public static class Rule_generic_cellMenu_z0m96w_a0a1d0 extends AbstractCellMenuPart_Generic_Item {
    public Rule_generic_cellMenu_z0m96w_a0a1d0() {
    }
    public void handleAction(SNode node, SModel model, IOperationContext operationContext, EditorContext editorContext) {
      SNodeFactoryOperations.addNewChild(node, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5e2385L, "tests"), SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e0215L, "MrJEditor.structure.RuleTest")));
    }
    public String getMatchingText() {
      return "Test";
    }
  }
  public static class Rule_generic_cellMenu_z0m96w_b0a1d0 extends AbstractCellMenuPart_Generic_Item {
    public Rule_generic_cellMenu_z0m96w_b0a1d0() {
    }
    public void handleAction(SNode node, SModel model, IOperationContext operationContext, EditorContext editorContext) {
      SNodeFactoryOperations.addNewChild(node, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0xd75d12e3a35bc76L, "comments"), SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff61bafeL, "MrJEditor.structure.Comment")));
    }
    public String getMatchingText() {
      return "Comment";
    }
  }
  public static class Rule_generic_cellMenu_z0m96w_c0a1d0 extends AbstractCellMenuPart_Generic_Item {
    public Rule_generic_cellMenu_z0m96w_c0a1d0() {
    }
    public void handleAction(SNode node, SModel model, IOperationContext operationContext, EditorContext editorContext) {
      SNodeFactoryOperations.addNewChild(node, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff61d3dcL, "subRules"), SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, "MrJEditor.structure.Rule")));
    }
    public String getMatchingText() {
      return "SubRule";
    }
  }
  public static class Rule_generic_cellMenu_z0m96w_d0a1d0 extends AbstractCellMenuPart_Generic_Item {
    public Rule_generic_cellMenu_z0m96w_d0a1d0() {
    }
    public void handleAction(SNode node, SModel model, IOperationContext operationContext, EditorContext editorContext) {
      ArrayList<SNode> referrers = new ArrayList<SNode>();

      HashMap<String, SNode> vars = Utils.slotFillingVars(node);
      if (vars.size() > 0) {
        HashMap<String, SNode> pass = as_vsykp2_a0a0a3a1cd((vars.clone()), HashMap.class);

        String postEvalFirst = "command.askText(\"__ASK_PARAM\");";
        String keepLevel = "command.setVariable(\"$_KEEP_LEVEL\",\"1\");";
        String removeFirst = "command.removeVariables(\"";
        SNode script = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07bL, "MrJEditor.structure.Script"));

        ArrayList<SNode> postEvalArray = Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, postEvalFirst, pass, referrers);
        ArrayList<SNode> keepLvlArray = Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, keepLevel, pass, referrers);

        SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef843L, "postEval")).clear();
        SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef843L, "postEval")).addAll(postEvalArray);
        String separator = "";
        for (String n : vars.keySet()) {
          removeFirst += separator + "$" + n;
          separator = "|";
        }
        removeFirst += "\");";
        SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff64934fL, "precond")).clear();
        SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff64934fL, "precond")).addAll(Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, removeFirst, pass, referrers));
        {
          String v;
          Iterator<String> v_iterator = SetSequence.fromSet(vars.keySet()).iterator();
          while (true) {
            if (!(v_iterator.hasNext())) {
              break;
            }
            v = v_iterator.next();
            {
              SNode subRule = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, "MrJEditor.structure.Rule"));
              String preCond = "command.getVariable(\"$" + v + "\")==null";
              String match1 = "__ASK_PARAM";
              String response = v + "?";
              SPropertyOperations.set(subRule, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5cd07fL, "level"), "" + (SPropertyOperations.getInteger(node, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5cd07fL, "level")) + 1));
              SLinkOperations.getChildren(subRule, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff64934fL, "precond")).addAll(Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, preCond, pass, referrers));
              SLinkOperations.getChildren(subRule, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5e8308L, "match")).addAll(Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, match1, pass, referrers));
              SLinkOperations.getChildren(subRule, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef83cL, "response")).addAll(Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, response, pass, referrers));
              ArrayList<SNode> postEvalArray2 = Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, postEvalFirst, pass, referrers);
              ArrayList<SNode> keepLvlArray2 = Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, keepLevel, pass, referrers);

              SNode subRule2 = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, "MrJEditor.structure.Rule"));
              SPropertyOperations.set(subRule2, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5cd07fL, "level"), "" + (SPropertyOperations.getInteger(subRule, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5cd07fL, "level")) + 1));
              String match2 = "<" + v + ">";
              SLinkOperations.getChildren(subRule2, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5e8308L, "match")).addAll(Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, match2, pass, referrers));
              SLinkOperations.getChildren(subRule2, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef836L, "preEval")).addAll(keepLvlArray2);
              String response2 = "storing #" + v;
              SLinkOperations.getChildren(subRule2, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef83cL, "response")).addAll(Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, response2, pass, referrers));
              SLinkOperations.getChildren(subRule2, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef843L, "postEval")).addAll(postEvalArray2);

              ListSequence.fromList(SLinkOperations.getChildren(subRule, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff61d3dcL, "subRules"))).addElement(subRule2);
              ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff61d3dcL, "subRules"))).addElement(subRule);
            }
          }
        }
        SNode subRule = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, "MrJEditor.structure.Rule"));
        String match1 = "__ASK_PARAM";
        String response = "ok";
        SPropertyOperations.set(subRule, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5cd07fL, "level"), "" + (SPropertyOperations.getInteger(node, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5cd07fL, "level")) + 1));
        SLinkOperations.getChildren(subRule, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5e8308L, "match")).addAll(Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, match1, pass, referrers));
        SLinkOperations.getChildren(subRule, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef83cL, "response")).addAll(Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, response, pass, referrers));
        ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff61d3dcL, "subRules"))).addElement(subRule);

        // resolve references 
        for (SNode v : ListSequence.fromList(referrers)) {
          if (vars.containsKey(SPropertyOperations.getString(v, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x48081dcc6022dc52L, 0x4c10d49decdbe4L, "possibleName")))) {
            SLinkOperations.setTarget(v, MetaAdapterFactory.getReferenceLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x48081dcc6022dc52L, 0x48081dcc602861e2L, "name"), vars.get(SPropertyOperations.getString(v, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x48081dcc6022dc52L, 0x4c10d49decdbe4L, "possibleName"))));
          }
        }
      }

    }
    public String getMatchingText() {
      return "Slot Filling";
    }
    private static <T> T as_vsykp2_a0a0a3a1cd(Object o, Class<T> type) {
      return (type.isInstance(o) ? (T) o : null);
    }
  }
  public static class Rule_generic_cellMenu_z0m96w_e0a1d0 extends AbstractCellMenuPart_Generic_Item {
    public Rule_generic_cellMenu_z0m96w_e0a1d0() {
    }
    public void handleAction(SNode node, SModel model, IOperationContext operationContext, EditorContext editorContext) {
      ArrayList<SNode> referrers = new ArrayList<SNode>();


      HashMap<String, SNode> vars = Utils.slotFillingVars(node);
      if (vars.size() > 0) {
        HashMap<String, SNode> pass = as_vsykp2_a0a0a4a1dd((vars.clone()), HashMap.class);

        String postEvalFirst = "command.askText(\"__ASK_PARAM\");";
        String keepLevel = "command.setVariable(\"$_KEEP_LEVEL\",\"1\");";
        String removeFirst = "command.removeVariables(\"";
        SNode script = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07bL, "MrJEditor.structure.Script"));

        ArrayList<SNode> postEvalArray = Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, postEvalFirst, pass, referrers);
        ArrayList<SNode> keepLvlArray = Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, keepLevel, pass, referrers);

        SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef843L, "postEval")).clear();
        SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef843L, "postEval")).addAll(postEvalArray);
        String separator = "";
        for (String n : vars.keySet()) {
          removeFirst += separator + "$" + n;
          separator = "|";
        }
        removeFirst += "\");";
        SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff64934fL, "precond")).clear();
        SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff64934fL, "precond")).addAll(Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, removeFirst, pass, referrers));
        {
          String v;
          Iterator<String> v_iterator = SetSequence.fromSet(vars.keySet()).iterator();
          while (true) {
            if (!(v_iterator.hasNext())) {
              break;
            }
            v = v_iterator.next();
            {
              SNode subRule = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, "MrJEditor.structure.Rule"));
              String preCond = "command.getVariable(\"$" + v + "\")==null";
              String match1 = "__ASK_PARAM";
              String response = v + "?";
              SPropertyOperations.set(subRule, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5cd07fL, "level"), "" + (SPropertyOperations.getInteger(node, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5cd07fL, "level")) + 1));
              SLinkOperations.getChildren(subRule, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff64934fL, "precond")).addAll(Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, preCond, pass, referrers));
              SLinkOperations.getChildren(subRule, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5e8308L, "match")).addAll(Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, match1, pass, referrers));
              SLinkOperations.getChildren(subRule, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef83cL, "response")).addAll(Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, response, pass, referrers));
              SNode subRule11 = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, "MrJEditor.structure.Rule"));
              String match11 = "exit";
              String response11 = "ok";
              SPropertyOperations.set(subRule11, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5cd07fL, "level"), "" + (SPropertyOperations.getInteger(subRule, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5cd07fL, "level")) + 1));
              SLinkOperations.getChildren(subRule11, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5e8308L, "match")).addAll(Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, match11, pass, referrers));
              SLinkOperations.getChildren(subRule11, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef83cL, "response")).addAll(Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, response11, pass, referrers));
              SNode subRule12 = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, "MrJEditor.structure.Rule"));
              String match12 = "<WHATEVER>";
              String keepLevel12 = "command.setVariable(\"$_KEEP_LEVEL\",\"0\");";
              String response12 = "Repeat";
              SPropertyOperations.set(subRule12, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5cd07fL, "level"), "" + (SPropertyOperations.getInteger(subRule, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5cd07fL, "level")) + 1));
              SLinkOperations.getChildren(subRule12, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5e8308L, "match")).addAll(Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, match12, pass, referrers));
              SLinkOperations.getChildren(subRule12, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef836L, "preEval")).addAll(Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, keepLevel12, pass, referrers));
              SLinkOperations.getChildren(subRule12, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef83cL, "response")).addAll(Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, response12, pass, referrers));

              ArrayList<SNode> postEvalArray2 = Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, postEvalFirst, pass, referrers);
              ArrayList<SNode> keepLvlArray2 = Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, keepLevel, pass, referrers);

              SNode subRule2 = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, "MrJEditor.structure.Rule"));
              SPropertyOperations.set(subRule2, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5cd07fL, "level"), "" + (SPropertyOperations.getInteger(subRule, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5cd07fL, "level")) + 1));
              String match2 = "<" + v + ">";
              SLinkOperations.getChildren(subRule2, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5e8308L, "match")).addAll(Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, match2, pass, referrers));
              SLinkOperations.getChildren(subRule2, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef836L, "preEval")).addAll(keepLvlArray2);
              String response2 = "storing #" + v;
              SLinkOperations.getChildren(subRule2, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef83cL, "response")).addAll(Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, response2, pass, referrers));
              SLinkOperations.getChildren(subRule2, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef843L, "postEval")).addAll(postEvalArray2);

              ListSequence.fromList(SLinkOperations.getChildren(subRule, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff61d3dcL, "subRules"))).addElement(subRule2);
              ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff61d3dcL, "subRules"))).addElement(subRule);
              ListSequence.fromList(SLinkOperations.getChildren(subRule, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff61d3dcL, "subRules"))).addElement(subRule11);
              ListSequence.fromList(SLinkOperations.getChildren(subRule, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff61d3dcL, "subRules"))).addElement(subRule12);

            }
          }
        }
        SNode subRule = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, "MrJEditor.structure.Rule"));
        String match1 = "__ASK_PARAM";
        String response = "ok";
        SPropertyOperations.set(subRule, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5cd07fL, "level"), "" + (SPropertyOperations.getInteger(node, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5cd07fL, "level")) + 1));
        SLinkOperations.getChildren(subRule, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5e8308L, "match")).addAll(Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, match1, pass, referrers));
        SLinkOperations.getChildren(subRule, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef83cL, "response")).addAll(Script__BehaviorDescriptor.parseTextElements_id1c4ditAcGZ.invoke(script, response, pass, referrers));
        ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff61d3dcL, "subRules"))).addElement(subRule);

        // resolve references 
        for (SNode v : ListSequence.fromList(referrers)) {
          if (vars.containsKey(SPropertyOperations.getString(v, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x48081dcc6022dc52L, 0x4c10d49decdbe4L, "possibleName")))) {
            SLinkOperations.setTarget(v, MetaAdapterFactory.getReferenceLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x48081dcc6022dc52L, 0x48081dcc602861e2L, "name"), vars.get(SPropertyOperations.getString(v, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x48081dcc6022dc52L, 0x4c10d49decdbe4L, "possibleName"))));
          }
        }
      }

    }
    public String getMatchingText() {
      return "Slot Filling with controls";
    }
    private static <T> T as_vsykp2_a0a0a4a1dd(Object o, Class<T> type) {
      return (type.isInstance(o) ? (T) o : null);
    }
  }
  public static class Rule_generic_cellMenu_z0m96w_f0a1d0 extends AbstractCellMenuPart_Generic_Item {
    public Rule_generic_cellMenu_z0m96w_f0a1d0() {
    }
    public void handleAction(SNode node, SModel model, IOperationContext operationContext, EditorContext editorContext) {
      if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, "MrJEditor.structure.Rule"))) {
        SNodeFactoryOperations.addNewChild((SNodeOperations.cast(SNodeOperations.getParent(node), MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, "MrJEditor.structure.Rule"))), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff61d3dcL, "subRules"), SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, "MrJEditor.structure.Rule")));
      }
    }
    public String getMatchingText() {
      return "New Sibling";
    }
  }
  public static class Rule_generic_cellMenu_z0m96w_g0a1d0 extends AbstractCellMenuPart_Generic_Item {
    public Rule_generic_cellMenu_z0m96w_g0a1d0() {
    }
    public void handleAction(SNode node, SModel model, IOperationContext operationContext, EditorContext editorContext) {
      if (SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5e2385L, "tests")).size() > 0 && SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07bL, "MrJEditor.structure.Script"))) {
        // Load vars 
        HashMap<String, String> vars = new HashMap<String, String>();
        for (SNode v : ListSequence.fromList(SLinkOperations.getChildren((SNodeOperations.cast(SNodeOperations.getParent(node), MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07bL, "MrJEditor.structure.Script"))), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07bL, 0x155a47bdff5cd07cL, "Elements")))) {
          if (SNodeOperations.isInstanceOf(v, MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd041L, "MrJEditor.structure.EntityDeclaration")) && !(SNodeOperations.isInstanceOf(v, MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff63ea14L, "MrJEditor.structure.EntityAssignment")))) {
            SNode ed = (SNodeOperations.cast(v, MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd041L, "MrJEditor.structure.EntityDeclaration")));
            vars.put(SPropertyOperations.getString(ed, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd041L, 0x4c10d49d68595eL, "name")), SPropertyOperations.getString(ed, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd041L, 0x155a47bdff5cd079L, "value")));
          }
        }
        LoggingRuntime.logMsgView(Level.DEBUG, "prima di stringFromMatch", Rule_EditorBuilder_a.class, null, null);
        String match = Utils.stringFromMatch(ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5e8308L, "match"))).toListSequence());
        LoggingRuntime.logMsgView(Level.DEBUG, "prima di expandMatch match=" + match, Rule_EditorBuilder_a.class, null, null);
        match = Utils.expandMatch(match, vars);
        LoggingRuntime.logMsgView(Level.DEBUG, "prima di variableSubst match=" + match, Rule_EditorBuilder_a.class, null, null);
        match = Utils.variableSubst(match, vars);
        LoggingRuntime.logMsgView(Level.DEBUG, "prima dei test match=" + match, Rule_EditorBuilder_a.class, null, null);
        for (SNode t : ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5e2385L, "tests")))) {
          SPropertyOperations.set(t, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e0215L, 0x294dd5aa2f4cc186L, "lastError"), null);
          SPropertyOperations.set(t, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e0215L, 0x2e1143b5c887237L, "matchedVars"), "");
          String[] subTests = match.split("°");
          int subPatternCount = 1;
          boolean mandatory = false;
          for (String rulePattern : subTests) {
            mandatory = (rulePattern.startsWith("{M}") || subPatternCount == 1);
            if (rulePattern.startsWith("{M}")) {
              rulePattern = rulePattern.substring("{M}".length());
            }
            long startTime = System.currentTimeMillis();
            Matcher m = null;
            boolean found = false;
            try {
              m = Utils.createTimeoutMatcher(SPropertyOperations.getString(t, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e0215L, 0x155a47bdff5e0218L, "input")), rulePattern, 2000);
              found = m.find();
            } catch (PatternSyntaxException pe) {
              SPropertyOperations.set(t, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e0215L, 0x294dd5aa2f4cc186L, "lastError"), "Syntax error");
            } catch (RuntimeException re) {
              LoggingRuntime.logMsgView(Level.DEBUG, "Timeout", Rule_EditorBuilder_a.class, re, null);
              SPropertyOperations.set(t, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e0215L, 0x294dd5aa2f4cc186L, "lastError"), "Timeout");
            } finally {
              int deltaT = ((int) (System.currentTimeMillis() - startTime));
              SPropertyOperations.set(t, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e0215L, 0x294dd5aa2edb8f6dL, "resultTime"), "" + (deltaT));
            }
            if (found) {
              SPropertyOperations.set(t, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e0215L, 0x294dd5aa2e55add4L, "lastMatched"), "" + (found));
              Set<String> namedGroups = Utils.getNamedGroupCandidates(rulePattern);
              for (String named : namedGroups) {
                if (m.group(named) != null) {
                  SPropertyOperations.set(t, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e0215L, 0x2e1143b5c887237L, "matchedVars"), SPropertyOperations.getString_def(t, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e0215L, 0x2e1143b5c887237L, "matchedVars"), "") + "[#" + named + ": " + m.group(named).trim() + "] ");
                }
              }
              LoggingRuntime.logMsgView(Level.DEBUG, "found input=" + SPropertyOperations.getString(t, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e0215L, 0x155a47bdff5e0218L, "input")) + "  RulePattern=" + rulePattern, Rule_EditorBuilder_a.class, null, null);
            } else {
              if (mandatory) {
                SPropertyOperations.set(t, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e0215L, 0x294dd5aa2e55add4L, "lastMatched"), "" + (false));
                LoggingRuntime.logMsgView(Level.DEBUG, "not found and mandatory: input=" + SPropertyOperations.getString(t, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e0215L, 0x155a47bdff5e0218L, "input")) + " RulePattern=" + rulePattern, Rule_EditorBuilder_a.class, null, null);
                break;
              } else {
                LoggingRuntime.logMsgView(Level.DEBUG, "not found and not mandatory: input=" + SPropertyOperations.getString(t, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e0215L, 0x155a47bdff5e0218L, "input")) + " RulePattern=" + rulePattern, Rule_EditorBuilder_a.class, null, null);
              }
            }
            subPatternCount++;
          }
        }
      }
    }
    public String getMatchingText() {
      return "Execute Test";
    }
  }
  private EditorCell createCollection_z0m96w_c3a() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_z0m96w_c3a");
    if (nodeCondition_z0m96w_a0c3a()) {
      editorCell.addEditorCell(createProperty_z0m96w_a2d0());
    }
    return editorCell;
  }
  private boolean nodeCondition_z0m96w_a0c3a() {
    return SPropertyOperations.getInteger(myNode, MetaAdapterFactory.getProperty(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5cd07fL, "level")) > 0;
  }
  private EditorCell createProperty_z0m96w_a2d0() {
    CellProviderWithRole provider = new PropertyCellProvider(myNode, getEditorContext());
    provider.setRole("level");
    provider.setNoTargetText("");
    provider.setAllowsEmptyTarget(true);
    EditorCell editorCell;
    editorCell = provider.createEditorCell(getEditorContext());
    editorCell.setCellId("property_level_1");
    Style style = new StyleImpl();
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.gray));
    editorCell.getStyle().putAll(style);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(getEditorContext());
      return manager.createNodeRoleAttributeCell(attributeConcept, provider.getRoleAttributeKind(), editorCell);
    } else
    return editorCell;
  }
  private EditorCell createConstant_z0m96w_d3a() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "%");
    editorCell.setCellId("Constant_z0m96w_d3a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.orange));
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_z0m96w_e3a() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_z0m96w_e3a");
    editorCell.setFoldable(true);
    editorCell.setFoldedCell(createConstant_z0m96w_a4d0());
    editorCell.addEditorCell(createRefNodeList_z0m96w_a4d0());
    editorCell.setInitiallyCollapsed(nodeCondition_z0m96w_a4d0());
    return editorCell;
  }
  private boolean nodeCondition_z0m96w_a4d0() {
    return ListSequence.fromList(SLinkOperations.getChildren(myNode, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5e8308L, "match"))).isNotEmpty();
  }
  private EditorCell createRefNodeList_z0m96w_a4d0() {
    AbstractCellListHandler handler = new Rule_EditorBuilder_a.precondListHandler_z0m96w_a4d0(myNode, "precond", getEditorContext());
    EditorCell_Collection editorCell = handler.createCells(new CellLayout_Indent(), false);
    editorCell.setCellId("refNodeList_precond_1");
    Style style = new StyleImpl();
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.magenta));
    style.set(StyleAttributes.PUNCTUATION_LEFT, true);
    style.set(StyleAttributes.PUNCTUATION_RIGHT, true);
    editorCell.getStyle().putAll(style);
    editorCell.setRole(handler.getElementRole());
    return editorCell;
  }
  private static class precondListHandler_z0m96w_a4d0 extends RefNodeListHandler {
    @NotNull
    private SNode myNode;

    public precondListHandler_z0m96w_a4d0(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    public SNode createNodeToInsert(EditorContext editorContext) {
      return nodeFactory();
    }
    public SNode nodeFactory() {
      return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e82feL, "MrJEditor.structure.Text"));
    }
    public EditorCell createNodeCell(SNode elementNode) {
      EditorCell elementCell = getUpdateSession().updateChildNodeCell(elementNode);
      installElementCellActions(elementNode, elementCell);
      return elementCell;
    }
    public EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(precondListHandler_z0m96w_a4d0.this.getNode(), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff64934fL, "precond")));
      try {
        EditorCell emptyCell = null;
        emptyCell = createConstant_z0m96w_a0e3a();
        installElementCellActions(null, emptyCell);
        setCellContext(emptyCell);
        return emptyCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    public void installElementCellActions(SNode elementNode, EditorCell elementCell) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        if (elementNode != null) {
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.FORWARD));
          elementCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.BACKWARD));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
          elementCell.setSubstituteInfo(new SChildSubstituteInfo(elementCell, getNode(), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff64934fL, "precond"), elementNode));
        }
      }
    }
    private EditorCell createConstant_z0m96w_a0e3a() {
      EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "<NO PreCond>");
      editorCell.setCellId("Constant_z0m96w_a0e3a");
      Style style = new StyleImpl();
      style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.magenta));
      editorCell.getStyle().putAll(style);
      editorCell.setDefaultText("");
      return editorCell;
    }
  }
  private EditorCell createConstant_z0m96w_a4d0() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "[Precond...]");
    editorCell.setCellId("Constant_z0m96w_a4d0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_z0m96w_f3a() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "%");
    editorCell.setCellId("Constant_z0m96w_f3a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.orange));
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_z0m96w_g3a() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_z0m96w_g3a");
    editorCell.addEditorCell(createRefNodeList_z0m96w_a6d0());
    return editorCell;
  }
  private EditorCell createRefNodeList_z0m96w_a6d0() {
    AbstractCellListHandler handler = new Rule_EditorBuilder_a.matchListHandler_z0m96w_a6d0(myNode, "match", getEditorContext());
    EditorCell_Collection editorCell = handler.createCells(new CellLayout_Indent(), false);
    editorCell.setCellId("refNodeList_match_1");
    Style style = new StyleImpl();
    style.set(StyleAttributes.BACKGROUND_COLOR, StyleRegistry.getInstance().getSimpleColor(new Color(14540253)));
    editorCell.getStyle().putAll(style);
    editorCell.setRole(handler.getElementRole());
    return editorCell;
  }
  private static class matchListHandler_z0m96w_a6d0 extends RefNodeListHandler {
    @NotNull
    private SNode myNode;

    public matchListHandler_z0m96w_a6d0(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    public SNode createNodeToInsert(EditorContext editorContext) {
      return nodeFactory();
    }
    public SNode nodeFactory() {
      return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e82feL, "MrJEditor.structure.Text"));
    }
    public EditorCell createNodeCell(SNode elementNode) {
      EditorCell elementCell = getUpdateSession().updateChildNodeCell(elementNode);
      installElementCellActions(elementNode, elementCell);
      return elementCell;
    }
    public EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(matchListHandler_z0m96w_a6d0.this.getNode(), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5e8308L, "match")));
      try {
        EditorCell emptyCell = null;
        emptyCell = createConstant_z0m96w_a0g3a();
        installElementCellActions(null, emptyCell);
        setCellContext(emptyCell);
        return emptyCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    public void installElementCellActions(SNode elementNode, EditorCell elementCell) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        if (elementNode != null) {
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.FORWARD));
          elementCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.BACKWARD));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
          elementCell.setSubstituteInfo(new SChildSubstituteInfo(elementCell, getNode(), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5e8308L, "match"), elementNode));
        }
      }
    }
    private EditorCell createConstant_z0m96w_a0g3a() {
      EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "<NO Match>");
      editorCell.setCellId("Constant_z0m96w_a0g3a");
      Style style = new StyleImpl();
      style.set(StyleAttributes.BACKGROUND_COLOR, StyleRegistry.getInstance().getSimpleColor(new Color(14540253)));
      editorCell.getStyle().putAll(style);
      editorCell.setDefaultText("");
      return editorCell;
    }
  }
  private EditorCell createConstant_z0m96w_h3a() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "%");
    editorCell.setCellId("Constant_z0m96w_h3a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.orange));
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_z0m96w_i3a() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_z0m96w_i3a");
    editorCell.setFoldable(true);
    editorCell.addEditorCell(createCollection_z0m96w_a8d0());
    editorCell.addEditorCell(createConstant_z0m96w_b8d0());
    editorCell.addEditorCell(createCollection_z0m96w_c8d0());
    editorCell.addEditorCell(createConstant_z0m96w_d8d0());
    editorCell.addEditorCell(createCollection_z0m96w_e8d0());
    editorCell.addEditorCell(createConstant_z0m96w_f8d0());
    editorCell.addEditorCell(createCollection_z0m96w_g8d0());
    editorCell.setInitiallyCollapsed(nodeCondition_z0m96w_a8d0());
    return editorCell;
  }
  private boolean nodeCondition_z0m96w_a8d0() {
    return ListSequence.fromList(SLinkOperations.getChildren(myNode, MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff5e8308L, "match"))).isNotEmpty();
  }
  private EditorCell createCollection_z0m96w_a8d0() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_z0m96w_a8d0");
    editorCell.setFoldable(true);
    editorCell.addEditorCell(createRefNodeList_z0m96w_a0i3a());
    return editorCell;
  }
  private EditorCell createRefNodeList_z0m96w_a0i3a() {
    AbstractCellListHandler handler = new Rule_EditorBuilder_a.preEvalListHandler_z0m96w_a0i3a(myNode, "preEval", getEditorContext());
    EditorCell_Collection editorCell = handler.createCells(new CellLayout_Indent(), false);
    editorCell.setCellId("refNodeList_preEval_1");
    Style style = new StyleImpl();
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.magenta));
    editorCell.getStyle().putAll(style);
    editorCell.setRole(handler.getElementRole());
    return editorCell;
  }
  private static class preEvalListHandler_z0m96w_a0i3a extends RefNodeListHandler {
    @NotNull
    private SNode myNode;

    public preEvalListHandler_z0m96w_a0i3a(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    public SNode createNodeToInsert(EditorContext editorContext) {
      return nodeFactory();
    }
    public SNode nodeFactory() {
      return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e82feL, "MrJEditor.structure.Text"));
    }
    public EditorCell createNodeCell(SNode elementNode) {
      EditorCell elementCell = getUpdateSession().updateChildNodeCell(elementNode);
      installElementCellActions(elementNode, elementCell);
      return elementCell;
    }
    public EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(preEvalListHandler_z0m96w_a0i3a.this.getNode(), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef836L, "preEval")));
      try {
        EditorCell emptyCell = null;
        emptyCell = createConstant_z0m96w_a0a8d0();
        installElementCellActions(null, emptyCell);
        setCellContext(emptyCell);
        return emptyCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    public void installElementCellActions(SNode elementNode, EditorCell elementCell) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        if (elementNode != null) {
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.FORWARD));
          elementCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.BACKWARD));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
          elementCell.setSubstituteInfo(new SChildSubstituteInfo(elementCell, getNode(), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef836L, "preEval"), elementNode));
        }
      }
    }
    private EditorCell createConstant_z0m96w_a0a8d0() {
      EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "<NO PreEval>");
      editorCell.setCellId("Constant_z0m96w_a0a8d0");
      Style style = new StyleImpl();
      style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.magenta));
      editorCell.getStyle().putAll(style);
      editorCell.setDefaultText("");
      return editorCell;
    }
  }
  private EditorCell createConstant_z0m96w_b8d0() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "%");
    editorCell.setCellId("Constant_z0m96w_b8d0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.orange));
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_z0m96w_c8d0() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_z0m96w_c8d0");
    editorCell.setFoldable(true);
    editorCell.addEditorCell(createRefNodeList_z0m96w_a2i3a());
    return editorCell;
  }
  private EditorCell createRefNodeList_z0m96w_a2i3a() {
    AbstractCellListHandler handler = new Rule_EditorBuilder_a.responseListHandler_z0m96w_a2i3a(myNode, "response", getEditorContext());
    EditorCell_Collection editorCell = handler.createCells(new CellLayout_Indent(), false);
    editorCell.setCellId("refNodeList_response_1");
    Style style = new StyleImpl();
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.blue));
    style.set(StyleAttributes.BACKGROUND_COLOR, StyleRegistry.getInstance().getSimpleColor(new Color(14540253)));
    editorCell.getStyle().putAll(style);
    editorCell.setRole(handler.getElementRole());
    return editorCell;
  }
  private static class responseListHandler_z0m96w_a2i3a extends RefNodeListHandler {
    @NotNull
    private SNode myNode;

    public responseListHandler_z0m96w_a2i3a(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    public SNode createNodeToInsert(EditorContext editorContext) {
      return nodeFactory();
    }
    public SNode nodeFactory() {
      return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e82feL, "MrJEditor.structure.Text"));
    }
    public EditorCell createNodeCell(SNode elementNode) {
      EditorCell elementCell = getUpdateSession().updateChildNodeCell(elementNode);
      installElementCellActions(elementNode, elementCell);
      return elementCell;
    }
    public EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(responseListHandler_z0m96w_a2i3a.this.getNode(), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef83cL, "response")));
      try {
        EditorCell emptyCell = null;
        emptyCell = createConstant_z0m96w_a0c8d0();
        installElementCellActions(null, emptyCell);
        setCellContext(emptyCell);
        return emptyCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    public void installElementCellActions(SNode elementNode, EditorCell elementCell) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        if (elementNode != null) {
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.FORWARD));
          elementCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.BACKWARD));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
          elementCell.setSubstituteInfo(new SChildSubstituteInfo(elementCell, getNode(), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef83cL, "response"), elementNode));
        }
      }
    }
    private EditorCell createConstant_z0m96w_a0c8d0() {
      EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "<NO Response>");
      editorCell.setCellId("Constant_z0m96w_a0c8d0");
      Style style = new StyleImpl();
      style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.blue));
      style.set(StyleAttributes.BACKGROUND_COLOR, StyleRegistry.getInstance().getSimpleColor(new Color(14540253)));
      editorCell.getStyle().putAll(style);
      editorCell.setDefaultText("");
      return editorCell;
    }
  }
  private EditorCell createConstant_z0m96w_d8d0() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "%");
    editorCell.setCellId("Constant_z0m96w_d8d0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.orange));
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_z0m96w_e8d0() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_z0m96w_e8d0");
    editorCell.setFoldable(true);
    editorCell.addEditorCell(createRefNodeList_z0m96w_a4i3a());
    return editorCell;
  }
  private EditorCell createRefNodeList_z0m96w_a4i3a() {
    AbstractCellListHandler handler = new Rule_EditorBuilder_a.postEvalListHandler_z0m96w_a4i3a(myNode, "postEval", getEditorContext());
    EditorCell_Collection editorCell = handler.createCells(new CellLayout_Indent(), false);
    editorCell.setCellId("refNodeList_postEval_1");
    Style style = new StyleImpl();
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.magenta));
    editorCell.getStyle().putAll(style);
    editorCell.setRole(handler.getElementRole());
    return editorCell;
  }
  private static class postEvalListHandler_z0m96w_a4i3a extends RefNodeListHandler {
    @NotNull
    private SNode myNode;

    public postEvalListHandler_z0m96w_a4i3a(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    public SNode createNodeToInsert(EditorContext editorContext) {
      return nodeFactory();
    }
    public SNode nodeFactory() {
      return SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5e82feL, "MrJEditor.structure.Text"));
    }
    public EditorCell createNodeCell(SNode elementNode) {
      EditorCell elementCell = getUpdateSession().updateChildNodeCell(elementNode);
      installElementCellActions(elementNode, elementCell);
      return elementCell;
    }
    public EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(postEvalListHandler_z0m96w_a4i3a.this.getNode(), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef843L, "postEval")));
      try {
        EditorCell emptyCell = null;
        emptyCell = createConstant_z0m96w_a0e8d0();
        installElementCellActions(null, emptyCell);
        setCellContext(emptyCell);
        return emptyCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    public void installElementCellActions(SNode elementNode, EditorCell elementCell) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        if (elementNode != null) {
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.FORWARD));
          elementCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.BACKWARD));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
          elementCell.setSubstituteInfo(new SChildSubstituteInfo(elementCell, getNode(), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x48081dcc601ef843L, "postEval"), elementNode));
        }
      }
    }
    private EditorCell createConstant_z0m96w_a0e8d0() {
      EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "<NO PostEval>");
      editorCell.setCellId("Constant_z0m96w_a0e8d0");
      Style style = new StyleImpl();
      style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.magenta));
      editorCell.getStyle().putAll(style);
      editorCell.setDefaultText("");
      return editorCell;
    }
  }
  private EditorCell createConstant_z0m96w_f8d0() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "%");
    editorCell.setCellId("Constant_z0m96w_f8d0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.orange));
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_z0m96w_g8d0() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_z0m96w_g8d0");
    editorCell.addEditorCell(createCollection_z0m96w_a6i3a());
    return editorCell;
  }
  private EditorCell createCollection_z0m96w_a6i3a() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_z0m96w_a6i3a");
    editorCell.setFoldable(true);
    editorCell.addEditorCell(createProperty_z0m96w_a0g8d0());
    return editorCell;
  }
  private EditorCell createProperty_z0m96w_a0g8d0() {
    CellProviderWithRole provider = new PropertyCellProvider(myNode, getEditorContext());
    provider.setRole("botImg");
    provider.setNoTargetText("<no botImg>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(getEditorContext());
    editorCell.setCellId("property_botImg_1");
    Style style = new StyleImpl();
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.DARK_GREEN));
    editorCell.getStyle().putAll(style);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(getEditorContext());
      return manager.createNodeRoleAttributeCell(attributeConcept, provider.getRoleAttributeKind(), editorCell);
    } else
    return editorCell;
  }
  private EditorCell createConstant_z0m96w_a3a() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "[Rule...]");
    editorCell.setCellId("Constant_z0m96w_a3a");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_z0m96w_e0() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Vertical());
    editorCell.setCellId("Collection_z0m96w_e0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_INDENT, true);
    editorCell.getStyle().putAll(style);
    editorCell.setFoldable(true);
    editorCell.setFoldedCell(createConstant_z0m96w_a4a());
    editorCell.addEditorCell(createRefNodeList_z0m96w_a4a());
    editorCell.setInitiallyCollapsed(true);
    return editorCell;
  }
  private EditorCell createRefNodeList_z0m96w_a4a() {
    AbstractCellListHandler handler = new Rule_EditorBuilder_a.subRulesListHandler_z0m96w_a4a(myNode, "subRules", getEditorContext());
    EditorCell_Collection editorCell = handler.createCells(new CellLayout_Indent(), false);
    editorCell.setCellId("refNodeList_subRules");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_INDENT, true);
    editorCell.getStyle().putAll(style);
    editorCell.setRole(handler.getElementRole());
    return editorCell;
  }
  private static class subRulesListHandler_z0m96w_a4a extends RefNodeListHandler {
    @NotNull
    private SNode myNode;

    public subRulesListHandler_z0m96w_a4a(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    public SNode createNodeToInsert(EditorContext editorContext) {
      return NodeFactoryManager.createNode(MetaAdapterFactory.getConcept(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, "MrJEditor.structure.Rule"), null, getNode(), getNode().getModel());
    }
    public EditorCell createNodeCell(SNode elementNode) {
      EditorCell elementCell = getUpdateSession().updateChildNodeCell(elementNode);
      installElementCellActions(elementNode, elementCell);
      return elementCell;
    }
    public EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(subRulesListHandler_z0m96w_a4a.this.getNode(), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff61d3dcL, "subRules")));
      try {
        EditorCell emptyCell = null;
        emptyCell = super.createEmptyCell();
        installElementCellActions(null, emptyCell);
        setCellContext(emptyCell);
        return emptyCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    public void installElementCellActions(SNode elementNode, EditorCell elementCell) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        if (elementNode != null) {
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.FORWARD));
          elementCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.BACKWARD));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
          elementCell.setSubstituteInfo(new SChildSubstituteInfo(elementCell, getNode(), MetaAdapterFactory.getContainmentLink(0xe74e27ff1ed748b3L, 0x90700f0eab442068L, 0x155a47bdff5cd07eL, 0x155a47bdff61d3dcL, "subRules"), elementNode));
        }
      }
    }
  }
  private EditorCell createConstant_z0m96w_a4a() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "[SubRules...]");
    editorCell.setCellId("Constant_z0m96w_a4a");
    editorCell.setDefaultText("");
    return editorCell;
  }
}
